{"version":3,"sources":["webpack:///./src/utils/cms/component-resolver.tsx","webpack:///./src/components/cms/SplitContainer/SplitContainer.tsx","webpack:///./src/components/Navigation/Navigation.tsx","webpack:///./src/components/cms/FlexiblePage/FlexiblePage.tsx","webpack:///./node_modules/classnames/index.js","webpack:///./node_modules/@babel/runtime/helpers/objectDestructuringEmpty.js"],"names":["ContentTypes","SplitContainer","_ref","_data$fields","data","fields","area1","area2","toggleRtl","document","documentElement","classList","toggle","renderArea","index","items","react_default","a","createElement","className","classNames","ClassNames","area","map","item","getComponent","href","onClick","typeId","sys","contentType","id","charAt","toUpperCase","substring","Component","ContainerSplitContent","Image","key","RichText","Navigation","objectDestructuringEmpty_default","_useState","useState","expanded","FlexiblePage","_ref$pageContext","pageContext","components","title","components_Navigation_Navigation","__WEBPACK_AMD_DEFINE_RESULT__","hasOwn","hasOwnProperty","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","call","join","module","exports","default","undefined","obj","TypeError"],"mappings":"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","file":"component---src-components-cms-flexible-page-flexible-page-tsx-eb85e4ffd92f2864df8c.js","sourcesContent":["import SplitContainer from \"../../components/cms/SplitContainer/SplitContainer\";\nimport React from \"react\";\n\nenum ContentTypes {\n    ContainerSplitContent = 1,\n    Image,\n    RichText,\n}\n\ninterface IContentFulItem {\n    sys: {\n        id: string,\n        contentType: {\n            sys: {\n                id: string\n            }\n        }\n    }\n}\n\nfunction getComponent(item: IContentFulItem) {\n    let typeId = item.sys.contentType.sys.id;\n    typeId = typeId.charAt(0).toUpperCase() + typeId.substring(1);\n\n    const id = item.sys.id;\n    const type = ContentTypes[typeId];\n    let Component;\n    switch (type) {\n        case ContentTypes.ContainerSplitContent:\n            Component = SplitContainer;\n            break;\n        case ContentTypes.Image:\n            Component = () => (<div key={id}>IMAGE ... from CMS Image</div>);\n            break;\n        case ContentTypes.RichText:\n            Component = () => (<div key={id}>RICH TEXT ... from CMS RichText</div>);\n            break;\n        default:\n            Component = () => (<div key={id}>TO BE IMPLEMENTED ... unknown from CMS</div>);\n            break;\n    }\n    return <Component key={id} data={item} />\n}\n\nexport default getComponent;","import React, {FunctionComponent} from 'react';\nimport getComponent from \"../../../utils/cms/component-resolver\";\n\nimport ClassNames from './SplitContainer.module.scss';\nimport classNames from 'classnames'\n\ninterface Props {\n    data: any\n}\n\n// not possible, cannot add vars to query. Check if we can resolve full model for page in createPages.js\nconst SplitContainer: FunctionComponent<Props> = ({data}) => {\n    const {area1, area2} = data.fields;\n\n    function toggleRtl() {\n        document.documentElement!.classList.toggle('rtl');\n    }\n    function renderArea(index, items) {\n        return (\n            <div className={classNames(ClassNames.area, ClassNames['area' + index])}>\n                <h3>Area{index} from CMS SplitContainer</h3>\n                <div>{items.map(item => getComponent(item))}</div>\n                {index === 2 && (<div><a href=\"/sample/second-page\">Second page (hard link now)</a></div>)}\n                <button onClick={toggleRtl}>Toggle RTL</button>\n            </div>\n        );\n    }\n    return (\n        <div className={ClassNames.SplitContainer}>\n            {renderArea(1, area1)}\n            {renderArea(2, area2)}\n        </div>\n    );\n};\n\nexport default SplitContainer;\n","import React, {FunctionComponent, useState} from 'react';\nimport ClassNames from './Navigation.module.scss';\nimport classNames from 'classnames';\n\ninterface Props {\n}\n\nconst Navigation: FunctionComponent<Props> = ({}) => {\n    const [expanded, setExpanded] = useState(false);\n\n    return (\n        <div className={classNames(ClassNames.Navigation, expanded && 'expanded')}>\n            MENU\n        </div>\n    );\n};\n\nexport default Navigation;\n","import React, {FunctionComponent} from 'react';\nimport getComponent from \"../../../utils/cms/component-resolver\";\n\nimport ClassNames from './FlexiblePage.module.scss';\nimport Navigation from \"../../Navigation/Navigation\";\n\ninterface Props {\n    pageContext: {\n        slug: string\n        metaKeywords: string[];\n        metaDescription: string;\n        title: string;\n        items: any[];\n    };\n}\n\nconst FlexiblePage: FunctionComponent<Props> = ({pageContext: {items, title}}) => {\n    const components = items.map(item => {\n        const Comp = getComponent(item);\n        return Comp;\n    });\n\n    return (\n        <div className={ClassNames.FlexiblePage}>\n            <Navigation/>\n            {components}\n        </div>\n    );\n};\n\nexport default FlexiblePage;\n","/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg) && arg.length) {\n\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\tif (inner) {\n\t\t\t\t\tclasses.push(inner);\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","function _objectDestructuringEmpty(obj) {\n  if (obj == null) throw new TypeError(\"Cannot destructure undefined\");\n}\n\nmodule.exports = _objectDestructuringEmpty;"],"sourceRoot":""}