{"version":3,"sources":["webpack:///./src/components/cms/SplitContainer/SplitContainer.tsx","webpack:///./src/components/cms/pages/SplitPage/SplitPage.tsx"],"names":["SplitContainer","_ref","area1","area2","toggleRtl","document","documentElement","classList","toggle","renderArea","index","items","react_default","a","createElement","className","ClassNames","map","item","getComponent","Link","to","onClick","SplitPage","props","_props$pageContext$fi","pageContext","fields","PageRoot","meta","cms_SplitContainer_SplitContainer"],"mappings":"2KA8CeA,EAnCkC,SAAAC,GAAsB,IAAnBC,EAAmBD,EAAnBC,MAAOC,EAAYF,EAAZE,MACvD,SAASC,IACLC,SAASC,iBAAmBD,SAASC,gBAAgBC,UAAUC,OAAO,OAG1E,SAASC,EAAWC,EAAeC,GAC/B,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAW,OAASN,IAChCE,EAAAC,EAAAC,cAAA,iBAASJ,EAAT,4BACAE,EAAAC,EAAAC,cAAA,WAAMH,EAAMM,IAAI,SAAAC,GAAI,OAAIC,YAAaD,MAC1B,IAAVR,GACGE,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAASC,GAAG,eAAZ,gCAEJT,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAASC,GAAG,WAAZ,2BAEJT,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,UAAQQ,QAASlB,GAAjB,iBAQxB,OACIQ,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAWhB,gBACtBS,EAAW,EAAGP,GACdO,EAAW,EAAGN,cCfZoB,UAX8C,SAAAC,GAAS,IAAAC,EACzCD,EAAME,YAAYC,OAAnCzB,EAD0DuB,EAC1DvB,MAAOC,EADmDsB,EACnDtB,MACf,OACIS,EAAAC,EAAAC,cAACc,EAAA,EAAaJ,EAAME,YAAYG,KAC5BjB,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAWO,WACvBX,EAAAC,EAAAC,cAACgB,EAAD,CAAgB5B,MAAOA,EAAOC,MAAOA","file":"component---src-components-cms-pages-split-page-split-page-tsx-eb818d30c86049e820ac.js","sourcesContent":["import React, { FunctionComponent, ReactNode } from 'react';\nimport getComponent from '../../../utils/cms/component-resolver';\n\nimport ClassNames from './SplitContainer.module.scss';\nimport AppLink from '../../../util-components/Link/Link';\n\ninterface Props {\n    area1: any[];\n    area2: any[];\n}\n\nconst SplitContainer: FunctionComponent<Props> = ({ area1, area2 }) => {\n    function toggleRtl(): void {\n        document.documentElement && document.documentElement.classList.toggle('rtl');\n    }\n\n    function renderArea(index: number, items: any[]): ReactNode {\n        return (\n            <div className={ClassNames['area' + index]}>\n                <h3>Area{index} from CMS SplitContainer</h3>\n                <div>{items.map(item => getComponent(item))}</div>\n                {index === 2 && (\n                    <div>\n                        <div>\n                            <AppLink to=\"/blank-page\">Second page (hard link now)</AppLink>\n                        </div>\n                        <div>\n                            <AppLink to=\"/splash\">Splash (hard link now)</AppLink>\n                        </div>\n                        <div>\n                            <button onClick={toggleRtl}>Toggle RTL</button>\n                        </div>\n                    </div>\n                )}\n            </div>\n        );\n    }\n\n    return (\n        <div className={ClassNames.SplitContainer}>\n            {renderArea(1, area1)}\n            {renderArea(2, area2)}\n        </div>\n    );\n};\n\nexport default SplitContainer;\n","import React, { FunctionComponent } from 'react';\nimport ClassNames from './SplitPage.module.scss';\nimport SplitContainer from '../../SplitContainer/SplitContainer';\nimport PageRoot from '../PageRoot/PageRoot';\nimport { CmsPageContext } from '../../../../types/CmsPageContext';\n\ninterface Props {\n    pageContext: {\n        fields: {\n            area1: any[];\n            area2: any[];\n        };\n    };\n}\n\nconst SplitPage: FunctionComponent<Props & CmsPageContext> = props => {\n    const { area1, area2 } = props.pageContext.fields;\n    return (\n        <PageRoot {...props.pageContext.meta}>\n            <div className={ClassNames.SplitPage}>\n                <SplitContainer area1={area1} area2={area2} />\n            </div>\n        </PageRoot>\n    );\n};\n\nexport default SplitPage;\n"],"sourceRoot":""}