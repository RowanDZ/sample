{"version":3,"sources":["webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/cms/pages/SplashPage/SplashMagic.tsx","webpack:///./src/components/cms/SplashSection/SplashSection.tsx","webpack:///./src/components/cms/pages/SplashPage/scrollHook.ts","webpack:///./src/components/cms/pages/SplashPage/SplashPage.tsx","webpack:///./src/util-components/Link/Link.tsx","webpack:///./src/components/cms/content-types/RichText/RichText.tsx","webpack:///./.cache/gatsby-browser-entry.js"],"names":["module","exports","m","default","preferDefault","require","_react","_interopRequireDefault","__webpack_require__","_propTypes","_pageRenderer","_loader","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","React","createElement","InternalPageRenderer","json","propTypes","PropTypes","shape","string","isRequired","_SplashMagicModule","_SplashSection","_interopRequireWildcard","_scrollHook","sections","activeIndex","previousIndex","length","className","ClassNames","components","map","item","idx","appearType","undefined","AppearType","ACTIVE","ACTIVE_NEXT","ACTIVE_PREV","WAS_ACTIVE","NONE","Object","assign","key","sys","id","_classnames","_SplashSectionModule","_RichText","props","fields","SplashSection","area1","style","background","background1","color","textColor1","img","src","image","file","url","area2","background2","textColor2","text","data","TIME_TO_WAIT_FOR_NEW_SCROLL_EVENT_IN_MILLIS","WHEEL_EVENT","TOUCH_START_EVENT","TOUCH_END_EVENT","wheeling","totalItemsToScrollThrough","initialItemIndex","setActiveIndex","useState","setPreviousIndex","next","prev","touchStartEvent","e","preventDefault","yStart","changedTouches","pageY","window","addEventListener","touchEndEvent","removeEventListener","treshold","Math","abs","wheelEvent","deltaY","clearTimeout","setTimeout","useEffect","_SplashPageModule","_SplashMagic","pageContext","SplashPage","_gatsby","children","to","test","Link","href","_RichTextModule","_richTextTypes","_richTextReactRenderer","_Link","_link","_PageConfig","Text","Paragraph","node","RichText","doc","options","renderNode","[object Object]","BLOCKS","EMBEDDED_ENTRY","JSON","stringify","PARAGRAPH","INLINES","HYPERLINK","uri","content","value","ENTRY_HYPERLINK","pageLinkMap","locales","currentLocaleCode","usePageConfig","slug","target","locale","find","code","link","getLinkPath","documentToReactComponents","constructRichText","Error","_gatsbyLink","_publicPageRenderer","StaticQueryContext","createContext","StaticQuery","Consumer","staticQueryData","query","render","useContext","context","object","func"],"mappings":"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","file":"component---src-components-cms-pages-splash-page-splash-page-tsx-7c3fcff434161335aeb7.js","sourcesContent":["const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React, { FunctionComponent, ReactNode } from 'react';\nimport ClassNames from './SplashMagic.module.scss';\nimport SplashSection, { AppearType, CmsProps as SplashSectionCmsProps } from '../../SplashSection/SplashSection';\nimport usePageItemsScroll from './scrollHook';\n\ninterface Props {\n    sections: SplashSectionCmsProps[];\n}\n\nconst SplashMagic: FunctionComponent<Props> = ({ sections }) => {\n    const { activeIndex, previousIndex } = usePageItemsScroll(sections.length);\n\n    function renderComponents(): ReactNode {\n        return sections.map((item, idx) => {\n            const appearType =\n                idx === activeIndex\n                    ? previousIndex === undefined\n                        ? AppearType.ACTIVE\n                        : activeIndex > previousIndex\n                        ? AppearType.ACTIVE_NEXT\n                        : AppearType.ACTIVE_PREV\n                    : idx === previousIndex\n                    ? AppearType.WAS_ACTIVE\n                    : AppearType.NONE;\n\n            return <SplashSection key={item.sys.id} appearType={appearType} {...item} />;\n        });\n    }\n\n    return <div className={ClassNames.components}>{renderComponents()}</div>;\n};\n\nexport default SplashMagic;\n","import React, { FunctionComponent } from 'react';\nimport classNames from 'classnames';\nimport ClassNames from './SplashSection.module.scss';\nimport RichText from '../content-types/RichText/RichText';\n\nexport interface CmsProps {\n    sys: {\n        id: string;\n    };\n    fields: {\n        image: any;\n        text: any;\n        background1: string;\n        background2: string;\n        textColor1?: string;\n        textColor2?: string;\n    };\n}\n\nexport enum AppearType {\n    ACTIVE = 1,\n    ACTIVE_NEXT,\n    ACTIVE_PREV,\n    WAS_ACTIVE,\n    NONE,\n}\n\ninterface Props {\n    appearType: AppearType;\n}\n\nconst SplashSection: FunctionComponent<Props & CmsProps> = props => {\n    const fields = props.fields;\n    return (\n        <div className={classNames(ClassNames.SplashSection, ClassNames[AppearType[props.appearType]])}>\n            <div className={ClassNames.area1} style={{ background: fields.background1, color: fields.textColor1 }}>\n                <img className={ClassNames.img} src={fields.image.fields.file.url} />\n            </div>\n            <div className={ClassNames.area2} style={{ background: fields.background2, color: fields.textColor2 }}>\n                <RichText className={ClassNames.text} data={fields.text} />\n            </div>\n        </div>\n    );\n};\n\nexport default SplashSection;\n","/* THIS HOOK SHOULD BE USED ONLY ONCE ON A PAGE. WHEELING PROPERTY CANNOT BE IN STATE, BECAUSE THAT IS DELAYED IN REACT,\n *  HENCE MOUSE WILL TRIGGER A LOT MORE EVENTS. BUT BECAUSE WHEELING IS NOW A MODULE PROP, MULTIPLE useScroll WILL\n *  INFLUENCE THIS SAME PROPERTY. NO GO. RESOLVE & LEAVE IT, YOU DON'T WANT 2 SCROLLS IN 1 PAGE ANYWAY */\nimport { useEffect, useState } from 'react';\n\nconst TIME_TO_WAIT_FOR_NEW_SCROLL_EVENT_IN_MILLIS = 50;\n\nconst WHEEL_EVENT = 'wheel';\nconst TOUCH_START_EVENT = 'touchstart';\nconst TOUCH_END_EVENT = 'touchend';\nlet wheeling: number | undefined = undefined;\n\nfunction usePageItemsScroll(\n    totalItemsToScrollThrough: number,\n    initialItemIndex: number = 0\n): { activeIndex: number; previousIndex: number | undefined } {\n    const [activeIndex, setActiveIndex] = useState(initialItemIndex);\n    const [previousIndex, setPreviousIndex] = useState<number | undefined>(undefined);\n\n    function next(): void {\n        setPreviousIndex(activeIndex);\n        setActiveIndex(activeIndex + 1);\n    }\n    function prev(): void {\n        setPreviousIndex(activeIndex);\n        setActiveIndex(activeIndex - 1);\n    }\n\n    function touchStartEvent(e: TouchEvent): void {\n        e.preventDefault();\n        const yStart = e.changedTouches[0].pageY;\n\n        function touchEndEvent(e): void {\n            e.preventDefault();\n            window.removeEventListener(TOUCH_END_EVENT, touchEndEvent);\n            const treshold = e.changedTouches[0].pageY - yStart;\n            if (Math.abs(treshold) < 15) {\n                return;\n            }\n            if (treshold < 0) {\n                next();\n            } else {\n                prev();\n            }\n        }\n        window.addEventListener(TOUCH_END_EVENT, touchEndEvent);\n    }\n\n    function wheelEvent(e): void {\n        if (wheeling === undefined) {\n            if (e.deltaY > 0 && activeIndex < totalItemsToScrollThrough - 1) {\n                next();\n            } else if (e.deltaY < 0 && 0 < activeIndex) {\n                prev();\n            }\n        }\n        clearTimeout(wheeling);\n        wheeling = window.setTimeout(() => {\n            wheeling = undefined;\n        }, TIME_TO_WAIT_FOR_NEW_SCROLL_EVENT_IN_MILLIS);\n    }\n\n    // inefficient, needs a single time (so deps [], but had issue and code will not stay probably :) )\n    useEffect(() => {\n        if (totalItemsToScrollThrough <= 1) {\n            return;\n        }\n        window.addEventListener(WHEEL_EVENT, wheelEvent);\n        window.addEventListener(TOUCH_START_EVENT, touchStartEvent);\n        return () => {\n            window.removeEventListener(WHEEL_EVENT, wheelEvent);\n            window.removeEventListener(TOUCH_START_EVENT, touchStartEvent);\n        };\n    }, [activeIndex, totalItemsToScrollThrough]);\n\n    return {\n        activeIndex,\n        previousIndex,\n    };\n}\n\nexport default usePageItemsScroll;\n","import React, { FunctionComponent } from 'react';\nimport ClassNames from './SplashPage.module.scss';\nimport { CmsProps as SplashSectionCmsProps } from '../../SplashSection/SplashSection';\nimport SplashMagic from './SplashMagic';\n\ninterface Props {\n    pageContext: {\n        fields: {\n            sections: SplashSectionCmsProps[];\n        };\n    };\n}\n\nconst SplashPage: FunctionComponent<Props> = props => {\n    const sections = props.pageContext.fields.sections;\n    return (\n        <div className={ClassNames.SplashPage}>\n            <SplashMagic sections={sections} />\n        </div>\n    );\n};\n\nexport default SplashPage;\n","import React, { FunctionComponent } from 'react';\nimport { Link as GatsbyLink } from 'gatsby';\n\n// Abstraction for links, so we don't have dependency on Gatsby in our components.\n// If more props needed, add them here\nexport interface AppLinkProps {\n    activeClassName?: string;\n    replace?: boolean;\n    to: string;\n    className?: string;\n}\n\nconst AppLink: FunctionComponent<AppLinkProps> = ({ children, to, ...props }) => {\n    // Tailor the following test to your environment.\n    // This example assumes that any internal link (intended for Gatsby)\n    // will start with exactly one slash, and that anything else is external.\n    const internal = /^\\/(?!\\/)/.test(to);\n\n    if (internal) {\n        return (\n            <GatsbyLink to={to} {...props}>\n                {children}\n            </GatsbyLink>\n        );\n    }\n    return (\n        <a href={to} {...props}>\n            {children}\n        </a>\n    );\n};\n\nexport default AppLink;\n","/*\n * https://www.contentful.com/developers/docs/javascript/tutorials/rendering-contentful-rich-text-with-javascript/\n * https://github.com/contentful/rich-text/tree/master/packages/rich-text-react-renderer\n * */\nimport React, { FunctionComponent } from 'react';\nimport ClassNames from './RichText.module.scss';\nimport { BLOCKS, INLINES } from '@contentful/rich-text-types';\nimport { documentToReactComponents, Options } from '@contentful/rich-text-react-renderer';\nimport AppLink from '../../../../util-components/Link/Link';\nimport { getLinkPath } from '../../../../utils/link/link';\nimport { Locale } from 'Types/Locale';\nimport { usePageConfig } from '../../../../contexts/PageConfig/PageConfig';\n\ninterface Props {\n    className?: string;\n    data: any;\n}\n\nconst Text: FunctionComponent = ({ children }) => <p className=\"align-center\">{children}</p>;\n\nconst Paragraph = (node, children) => {\n    return <Text>{children}</Text>;\n};\n\nfunction constructRichText(doc) {\n    const options: Options = {\n        renderNode: {\n            [BLOCKS.EMBEDDED_ENTRY]: function EmbeddedEntry(node) {\n                return <div>{JSON.stringify(node)}</div>;\n            },\n            [BLOCKS.PARAGRAPH]: Paragraph,\n            [INLINES.HYPERLINK]: function HyperLink(node) {\n                return <AppLink to={node.data.uri}>{(node.content[0] as any).value}</AppLink>;\n            },\n            [INLINES.ENTRY_HYPERLINK]: function EntryHyperLink(node) {\n                const { pageLinkMap, locales, currentLocaleCode } = usePageConfig();\n                const slug = pageLinkMap[node.data.target.sys.id];\n\n                const locale: Locale = locales.find(locale => locale.code === currentLocaleCode)!;\n                const link = getLinkPath(locale, slug);\n\n                return <AppLink to={link}>{(node.content[0] as any).value}</AppLink>;\n            },\n        },\n    };\n\n    return documentToReactComponents(doc, options);\n}\nconst RichText: FunctionComponent<Props> = ({ className, data }) => {\n    return <div className={ClassNames.RichText}>{constructRichText(data)}</div>;\n};\n\nexport default RichText;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n"],"sourceRoot":""}