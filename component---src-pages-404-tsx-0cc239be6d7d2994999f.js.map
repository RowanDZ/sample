{"version":3,"sources":["webpack:///./src/components/Header/Header.tsx","webpack:///./src/components/layout.tsx","webpack:///./src/pages/404.tsx","webpack:///./src/components/seo.tsx","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/util-components/Link/Link.tsx","webpack:///./.cache/public-page-renderer-prod.js"],"names":["Header","_ref","siteTitle","react_default","a","createElement","style","background","marginBottom","margin","maxWidth","padding","Link","to","defaultProps","Layout","children","gatsby_browser_entry","query","render","data","Fragment","components_Header_Header","site","siteMetadata","title","paddingTop","Date","getFullYear","href","_2924840780","NotFoundPage","layout","seo","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_helmet__WEBPACK_IMPORTED_MODULE_1__","react_helmet__WEBPACK_IMPORTED_MODULE_1___default","AUTHOR","process","SEO","_ref$description","description","_ref$lang","lang","_ref$meta","meta","_ref$keywords","keywords","completeMeta","name","content","property","concat","length","join","htmlAttributes","titleTemplate","m","module","exports","require","default","d","__webpack_exports__","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","props","Consumer","staticQueryData","propTypes","PropTypes","object","string","isRequired","func","AppLink","_babel_runtime_helpers_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0___default","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_2__","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape"],"mappings":"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","file":"component---src-pages-404-tsx-0cc239be6d7d2994999f.js","sourcesContent":["import React, { FunctionComponent } from 'react';\nimport AppLink from '../../util-components/Link/Link';\n\ninterface Props {\n    siteTitle: string;\n}\n\nconst Header: FunctionComponent<Props> = ({ siteTitle }) => (\n    <header\n        style={{\n            background: `rebeccapurple`,\n            marginBottom: `1.45rem`,\n        }}\n    >\n        <div\n            style={{\n                margin: `0 auto`,\n                maxWidth: 960,\n                padding: `1.45rem 1.0875rem`,\n            }}\n        >\n            <h1 style={{ margin: 0 }}>\n                <AppLink to=\"/\">{siteTitle}</AppLink>\n            </h1>\n        </div>\n    </header>\n);\n\nHeader.defaultProps = {\n    siteTitle: ``,\n};\n\nexport default Header;\n\nfunction precommitTest() {\n    const x = 11;\n}\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React, { FunctionComponent, ReactNode } from 'react';\nimport { StaticQuery, graphql } from 'gatsby';\n\nimport Header from './Header/Header';\n\ninterface Props {\n    children: ReactNode;\n}\n\nconst Layout: FunctionComponent<Props> = ({ children }) => (\n    <StaticQuery\n        query={graphql`\n            query SiteTitleQuery {\n                site {\n                    siteMetadata {\n                        title\n                    }\n                }\n            }\n        `}\n        render={data => (\n            <>\n                <Header siteTitle={data.site.siteMetadata.title} />\n                <div\n                    style={{\n                        margin: `0 auto`,\n                        maxWidth: 960,\n                        padding: `0px 1.0875rem 1.45rem`,\n                        paddingTop: 0,\n                    }}\n                >\n                    <main>{children}</main>\n                    <footer>\n                        Â© {new Date().getFullYear()}, Built with\n                        {` `}\n                        <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n                    </footer>\n                </div>\n            </>\n        )}\n    />\n);\n\nexport default Layout;\n","import React, { FunctionComponent } from 'react';\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\n\ninterface Props {}\n\nconst NotFoundPage: FunctionComponent<Props> = () => (\n    <Layout>\n        <SEO title=\"404: Not found\" />\n        <h1>NOT FOUND</h1>\n        <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n    </Layout>\n);\n\nexport default NotFoundPage;\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React, { FunctionComponent } from 'react';\nimport Helmet from 'react-helmet';\n\nconst AUTHOR = process.env.TWITTER_AUTHOR || '';\nconst TAB_TITLE_SUFFIX = process.env.TAB_TITLE_SUFFIX || '';\n\ninterface Props {\n    description?: string;\n    lang?: string;\n    meta?: JSX.IntrinsicElements['meta'][];\n    keywords?: string[];\n    title: string;\n}\n\nconst SEO: FunctionComponent<Props> = ({ description = '', lang = 'en', meta = [], keywords = [], title }) => {\n    const completeMeta = [\n        {\n            name: `description`,\n            content: description,\n        },\n        {\n            property: `og:title`,\n            content: title,\n        },\n        {\n            property: `og:description`,\n            content: description,\n        },\n        {\n            property: `og:type`,\n            content: `website`,\n        },\n        {\n            name: `twitter:card`,\n            content: `summary`,\n        },\n        {\n            name: `twitter:creator`,\n            content: AUTHOR,\n        },\n        {\n            name: `twitter:title`,\n            content: title,\n        },\n        {\n            name: `twitter:description`,\n            content: description,\n        },\n    ]\n        .concat(\n            keywords.length > 0\n                ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                  }\n                : []\n        )\n        .concat(meta as any);\n\n    return (\n        <Helmet\n            htmlAttributes={{\n                lang,\n            }}\n            title={title}\n            titleTemplate={`%s${TAB_TITLE_SUFFIX}`}\n            meta={completeMeta}\n        />\n    );\n};\n\nexport default SEO;\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React, { FunctionComponent } from 'react';\nimport { Link as GatsbyLink } from 'gatsby';\n\n// Abstraction for links, so we don't have dependency on Gatsby in our components.\n// If more props needed, add them here\nexport interface AppLinkProps {\n    activeClassName?: string;\n    replace?: boolean;\n    to: string;\n    className?: string;\n}\n\nconst AppLink: FunctionComponent<AppLinkProps> = ({ children, ...props }) => {\n    return <GatsbyLink {...props}>{children}</GatsbyLink>;\n};\n\nexport default AppLink;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}